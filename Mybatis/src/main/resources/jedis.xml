<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
        default-autowire="byName">

    <!--redis-pool-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--最大空闲数-->
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <!--连接池的最大数据库连接数  -->
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <!--最大建立连接等待时间-->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
        <!--逐出连接的最小空闲时间 默认1800000毫秒(30分钟)-->
        <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}"/>
        <!--每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3-->
        <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}"/>
        <!--逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1-->
        <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}"/>
        <!--是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个-->
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <!--在空闲时检查有效性, 默认false  -->
        <property name="testWhileIdle" value="${redis.testWhileIdle}"/>
        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}"/>
    </bean>
    <!--redis-connection-factory-->
    <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="poolConfig"></property>
        <!--IP地址 -->
        <property name="hostName" value="${redis.hostName}"></property>
        <!--端口号  -->
        <property name="port" value="${redis.port}"></property>
        <!--如果Redis设置有密码  -->
        <property name="password" value="${redis.password}"/>
        <!--客户端超时时间单位是毫秒  -->
        <property name="timeout" value="${redis.timeout}"></property>
    </bean>

    <!--&lt;!&ndash; cache配置 &ndash;&gt;-->
    <!--<bean id="methodCacheInterceptor" class="com.jiangwei.config.MethodCacheInterceptor">-->
        <!--<property name="redisUtil" ref="redisUtil"/>-->
    <!--</bean>-->

    <bean id="redisUtil" class="com.jiangwei.util.RedisUtil">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>

    <!--序列化-->
    <bean id="redisTemplate" name="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory"/>
        <property name="keySerializer" ref="stringRedisSerializer"/>
        <property name="hashKeySerializer" ref="stringRedisSerializer"/>
        <property name="valueSerializer" ref="genericjackson2JsonRedisSerializer"/>
        <property name="hashValueSerializer" ref="genericjackson2JsonRedisSerializer"/>
        <!--<property name="defaultSerializer" ref="jackson2JsonRedisSerializer"/>-->
    </bean>

    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <bean id="genericjackson2JsonRedisSerializer"
          class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>

    <bean id="jdkSerializationRedisSerializer"
          class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>


    <!-- 当proxy-target-class为false时使用JDK动态代理 -->
    <!-- 为true时使用cglib -->
    <!-- cglib无法拦截接口方法 -->



    <!--&lt;!&ndash; 缓存拦截器配置 &ndash;&gt;-->
    <!--<bean id="methodCacheInterceptor" class="com.jiangwei.config.MethodCacheInterceptor">-->
        <!--<property name="redisUtil" ref="redisUtil"/>-->
        <!--<property name="defaultCacheExpireTime" value="${defaultCacheExpireTime}"/>-->
        <!--&lt;!&ndash; 禁用缓存的类名列表 &ndash;&gt;-->
        <!--<property name="targetNamesList">-->
            <!--<list>-->
                <!--<value></value>-->
            <!--</list>-->
        <!--</property>-->
        <!--&lt;!&ndash; 禁用缓存的方法名列表 &ndash;&gt;-->
        <!--<property name="methodNamesList">-->
            <!--<list>-->
                <!--<value></value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash;配置切面拦截方法 &ndash;&gt;-->
    <!--<aop:config proxy-target-class="true">-->
        <!--<aop:pointcut id="controllerMethodPointcut" expression="execution(* com.jiangwei.service.impl.*.select*(..))"/>-->
        <!--<aop:advisor advice-ref="methodCacheInterceptor" pointcut-ref="controllerMethodPointcut"/>-->
    <!--</aop:config>-->


</beans>